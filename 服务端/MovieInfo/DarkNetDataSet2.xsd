<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DarkNetDataSet2" targetNamespace="http://tempuri.org/DarkNetDataSet2.xsd" xmlns:mstns="http://tempuri.org/DarkNetDataSet2.xsd" xmlns="http://tempuri.org/DarkNetDataSet2.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DarkNetConnectionString1" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DarkNetConnectionString1 (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.MovieInfo.Properties.Settings.GlobalReference.Default.DarkNetConnectionString1" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MovieTypeTableAdapter" GeneratorDataComponentClassName="MovieTypeTableAdapter" Name="MovieType" UserDataComponentName="MovieTypeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DarkNetConnectionString1 (Settings)" DbObjectName="DarkNet.dbo.MovieType" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[MovieType] WHERE (([LX_ID] = @Original_LX_ID) AND ([LX_Type] = @Original_LX_Type))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LX_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LX_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LX_Type" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LX_Type" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[MovieType] ([LX_Type]) VALUES (@LX_Type);
SELECT LX_ID, LX_Type FROM MovieType WHERE (LX_ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LX_Type" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LX_Type" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT LX_ID, LX_Type FROM dbo.MovieType</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[MovieType] SET [LX_Type] = @LX_Type WHERE (([LX_ID] = @Original_LX_ID) AND ([LX_Type] = @Original_LX_Type));
SELECT LX_ID, LX_Type FROM MovieType WHERE (LX_ID = @LX_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LX_Type" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LX_Type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LX_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LX_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LX_Type" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LX_Type" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="LX_ID" ColumnName="LX_ID" DataSourceName="DarkNet.dbo.MovieType" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@LX_ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="LX_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="LX_ID" DataSetColumn="LX_ID" />
              <Mapping SourceColumn="LX_Type" DataSetColumn="LX_Type" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DarkNetDataSet2" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="DarkNetDataSet2" msprop:Generator_UserDSName="DarkNetDataSet2">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="MovieType" msprop:Generator_TableClassName="MovieTypeDataTable" msprop:Generator_TableVarName="tableMovieType" msprop:Generator_TablePropName="MovieType" msprop:Generator_RowDeletingName="MovieTypeRowDeleting" msprop:Generator_RowChangingName="MovieTypeRowChanging" msprop:Generator_RowEvHandlerName="MovieTypeRowChangeEventHandler" msprop:Generator_RowDeletedName="MovieTypeRowDeleted" msprop:Generator_UserTableName="MovieType" msprop:Generator_RowChangedName="MovieTypeRowChanged" msprop:Generator_RowEvArgName="MovieTypeRowChangeEvent" msprop:Generator_RowClassName="MovieTypeRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="LX_ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnLX_ID" msprop:Generator_ColumnPropNameInRow="LX_ID" msprop:Generator_ColumnPropNameInTable="LX_IDColumn" msprop:Generator_UserColumnName="LX_ID" type="xs:int" />
              <xs:element name="LX_Type" msprop:Generator_ColumnVarNameInTable="columnLX_Type" msprop:Generator_ColumnPropNameInRow="LX_Type" msprop:Generator_ColumnPropNameInTable="LX_TypeColumn" msprop:Generator_UserColumnName="LX_Type">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:MovieType" />
      <xs:field xpath="mstns:LX_ID" />
    </xs:unique>
  </xs:element>
</xs:schema>